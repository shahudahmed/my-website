[[redirects]]
  from = "https://bigredbanana.com/*"
  to = "https://bigredbanana.in/:splat"
  status = 301
  force = true
// netlify/functions/get-blog-posts.js
exports.handler = async (event, context) => {
  // Set CORS headers
  const headers = {
    'Access-Control-Allow-Origin': '*',
    'Access-Control-Allow-Headers': 'Content-Type',
    'Access-Control-Allow-Methods': 'GET, POST, OPTIONS',
    'Content-Type': 'application/json'
  };

  // Handle preflight requests
  if (event.httpMethod === 'OPTIONS') {
    return {
      statusCode: 200,
      headers,
      body: ''
    };
  }

  try {
    // Blog posts data based on your current structure
    const blogPosts = [
      {
        id: 1,
        title: "First Blog Post",
        excerpt: "Welcome to my blog! This is my very first post.",
        date: "2024-06-04",
        slug: "firstblog",
        url: "/blog/firstblog.html",
        author: "Admin",
        tags: ["welcome", "first post", "blog"]
      },
      {
        id: 2,
        title: "Blog Post",
        excerpt: "Another blog post with interesting content.",
        date: "2024-06-03",
        slug: "blog",
        url: "/blog/blog.html",
        author: "Admin",
        tags: ["blog", "content"]
      }
    ];

    // Handle different request methods
    if (event.httpMethod === 'GET') {
      // Get query parameters
      const { slug } = event.queryStringParameters || {};
      
      if (slug) {
        // Return specific blog post
        const post = blogPosts.find(p => p.slug === slug);
        if (!post) {
          return {
            statusCode: 404,
            headers,
            body: JSON.stringify({ error: 'Blog post not found' })
          };
        }
        return {
          statusCode: 200,
          headers,
          body: JSON.stringify(post)
        };
      } else {
        // Return all blog posts
        return {
          statusCode: 200,
          headers,
          body: JSON.stringify({
            posts: blogPosts,
            total: blogPosts.length
          })
        };
      }
    }

    return {
      statusCode: 405,
      headers,
      body: JSON.stringify({ error: 'Method not allowed' })
    };

  } catch (error) {
    console.error('Function error:', error);
    return {
      statusCode: 500,
      headers,
      body: JSON.stringify({ 
        error: 'Internal server error',
        message: error.message 
      })
    };
  }
};
